<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutAuthor" xml:space="preserve">
    <value>Written by Bret Taylor (btaylor@gmail.com).</value>
    <comment>Written by text in the About form.</comment>
  </data>
  <data name="AboutClose" xml:space="preserve">
    <value>Close</value>
    <comment>Close button in the About form.</comment>
  </data>
  <data name="AboutLicense" xml:space="preserve">
    <value>Licensed under the Apache 2.0 open source license.</value>
    <comment>License text in the About form.</comment>
  </data>
  <data name="AboutLink" xml:space="preserve">
    <value>http://finiteloop.org/~btaylor/software/stickies/</value>
    <comment>The URL we display in the About box.</comment>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About {0}</value>
    <comment>Title of the About form. form. The placeholder is replaced with the product name.</comment>
  </data>
  <data name="AboutVersion" xml:space="preserve">
    <value>Version {0}</value>
    <comment>Version text in the About form. The placeholder is replaced with the current version number of the application.</comment>
  </data>
  <data name="ErrorNoteLoad" xml:space="preserve">
    <value>There was an error loading one of your sticky notes. {0}</value>
    <comment>Shown to the user if there is an invalid Note XML file in their settings directory.</comment>
  </data>
  <data name="ErrorNoteSave" xml:space="preserve">
    <value>There was an error saving one of your sticky notes. {0}</value>
    <comment>Shown to the end user when we cannot save one of their sticky notes.</comment>
  </data>
  <data name="ErrorPreferencesSave" xml:space="preserve">
    <value>There was an error saving your preferences. {0}</value>
    <comment>Shown to the end user when the Preferences save operation fails for any reason.</comment>
  </data>
  <data name="ErrorSettingsDirectory" xml:space="preserve">
    <value>There was an error reading the directory in which sticky notes are saved. {0}</value>
    <comment>Shown to the end user when we can't enumerate all the note files in the settings directory.</comment>
  </data>
  <data name="MainAbout" xml:space="preserve">
    <value>&amp;About {0}</value>
    <comment>"About Stickies" menu item. The placeholder is replaced with the product name.</comment>
  </data>
  <data name="MainDeleteAllConfirm" xml:space="preserve">
    <value>Are you sure you want to delete all of your sticky notes?</value>
    <comment>Displayed in a message box to the user when they click the "Delete All Notes" menu item</comment>
  </data>
  <data name="MainDeleteAllNotes" xml:space="preserve">
    <value>&amp;Delete All Notes</value>
    <comment>"Delete All Notes" menu item</comment>
  </data>
  <data name="MainExit" xml:space="preserve">
    <value>E&amp;xit</value>
    <comment>"Exit"menu item</comment>
  </data>
  <data name="MainNewNote" xml:space="preserve">
    <value>&amp;New Note</value>
    <comment>"New Note" menu item</comment>
  </data>
  <data name="MainPreferences" xml:space="preserve">
    <value>&amp;Preferences</value>
    <comment>"Preferences" menu item</comment>
  </data>
  <data name="MainShowAllNotes" xml:space="preserve">
    <value>&amp;Show All Notes</value>
    <comment>"Show All Notes" menu item</comment>
  </data>
  <data name="MessageIntroduction" xml:space="preserve">
    <value>Welcome to {0}! To create a new note, double click this icon. Right click to set your preferences.</value>
    <comment>Shown to the user the first time they use the application. The placeholder is replaced with the name of the application.</comment>
  </data>
  <data name="NoteNewStickyNote" xml:space="preserve">
    <value>&lt;New Sticky Note&gt;</value>
    <comment>Title of the window for a NoteForm with no content. This is displayed to the end user when they are Alt-Tabbing through windows.</comment>
  </data>
  <data name="NoteSettingsTitle" xml:space="preserve">
    <value>Note Settings</value>
    <comment>Title of the Note Settings dialog box.</comment>
  </data>
  <data name="PreferencesAppearanceTab" xml:space="preserve">
    <value>Note Appearance</value>
    <comment>Title of the Note Appearance tab in the Preferences form.</comment>
  </data>
  <data name="PreferencesCancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel button in the Preferences form.</comment>
  </data>
  <data name="PreferencesNoteText" xml:space="preserve">
    <value>Set your font and color preferences using the buttons to the right.</value>
    <comment>Displayed in the note in the Preferences form.</comment>
  </data>
  <data name="PreferencesSave" xml:space="preserve">
    <value>Save Preferences</value>
    <comment>Save button in the Preferences form.</comment>
  </data>
  <data name="PreferencesTitle" xml:space="preserve">
    <value>{0} Preferences</value>
    <comment>Title of the Preferences form. The placeholder is replaced with the product name.</comment>
  </data>
  <data name="UpdateCheckUrl" xml:space="preserve">
    <value>http://finiteloop.org/~btaylor/software/stickies/checkupdate.php?v={0}</value>
    <comment>The URL we use to check for new versions of Stickies.</comment>
  </data>
</root>